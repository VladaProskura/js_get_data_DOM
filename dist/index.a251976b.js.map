{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,I,EAAM,EAAc,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFW,SAAS,gBAAgB,CAAC,qB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAGtD,GAAG,CAAC,SAAC,CADR,EACe,OAAA,WAAW,EAAG,SAAS,CAAC,OAAO,CAAC,KAAM,IAClD,GAAA,MAAM,CAAC,SAAC,CAAR,EAAgB,MAAA,CAAC,MAAM,E,GAEpB,EAAQ,EAAY,MAAM,CAAC,SAAC,CAAA,CAAK,CAAvC,EAAgD,OAAA,EAAM,CAAM,EAAA,GACtD,EAAU,EAAY,MAAM,CAAG,EAAI,EAAQ,EAAY,MAAM,CAAG,EAEhE,EAAkB,IAAI,KAAK,YAAY,CAAC,SACxC,EAAiB,EAAgB,MAAM,CAAC,GACxC,EAAmB,EAAgB,MAAM,CAAC,GAE1C,EAAY,SAAS,aAAa,CAAC,yBACnC,EAAc,SAAS,aAAa,CAAC,2BAEvC,GACF,CAAA,EAAU,SAAS,CAAG,CADxB,EAII,GACF,CAAA,EAAY,SAAS,CAAG,CAD1B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar populationElements = _to_consumable_array(document.querySelectorAll('span.population'));\nvar populations = populationElements.map(function(el) {\n    return parseFloat(el.innerText.replace(/,/g, ''));\n}).filter(function(num) {\n    return !isNaN(num);\n});\nvar total = populations.reduce(function(acc, curr) {\n    return acc + curr;\n}, 0);\nvar average = populations.length > 0 ? total / populations.length : 0;\nvar numberFormatter = new Intl.NumberFormat('en-US');\nvar formattedTotal = numberFormatter.format(total);\nvar formattedAverage = numberFormatter.format(average);\nvar totalSpan = document.querySelector('span.total-population');\nvar averageSpan = document.querySelector('span.average-population');\nif (totalSpan) totalSpan.innerText = formattedTotal;\nif (averageSpan) averageSpan.innerText = formattedAverage;\n\n//# sourceMappingURL=index.a251976b.js.map\n","'use strict';\n\nconst populationElements = [...document.querySelectorAll('span.population')];\n\nconst populations = populationElements\n  .map((el) => parseFloat(el.innerText.replace(/,/g, '')))\n  .filter((num) => !isNaN(num));\n\nconst total = populations.reduce((acc, curr) => acc + curr, 0);\nconst average = populations.length > 0 ? total / populations.length : 0;\n\nconst numberFormatter = new Intl.NumberFormat('en-US');\nconst formattedTotal = numberFormatter.format(total);\nconst formattedAverage = numberFormatter.format(average);\n\nconst totalSpan = document.querySelector('span.total-population');\nconst averageSpan = document.querySelector('span.average-population');\n\nif (totalSpan) {\n  totalSpan.innerText = formattedTotal;\n}\n\nif (averageSpan) {\n  averageSpan.innerText = formattedAverage;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","populations","populationElements","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","el","parseFloat","innerText","replace","filter","num","isNaN","total","reduce","acc","curr","average","numberFormatter","Intl","NumberFormat","formattedTotal","format","formattedAverage","totalSpan","querySelector","averageSpan"],"version":3,"file":"index.a251976b.js.map"}